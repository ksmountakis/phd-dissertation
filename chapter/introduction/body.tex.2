

	% dissertation is part of r&d programme
	This dissertation is part of a research and development (R\&D) programme,
	conducted by \emph{Nederlandse Spoorwegen} (NS)--the primary railway operator in the Netherlands,
	in cooperation with several Dutch universities.
	% what this r&d is about
	One of the aims of this programme is to develop automated scheduling techniques
	that will enhance the timeliness of services provided by NedTrain\footnote{http://www.nedtrain.nl},
	a subcontractor of NS responsible for carrying-out maintenance operations on the train fleet.
	More in particular, the aim is to find scheduling techniques that enable computer-aided 
	scheduling and dispatching of operations (or tasks, or activities) within a train maintenance workshop,
	with a focus on hedging against uncertainty in order to prevent delays in delivering rolling stock for circulation in the railway network.
	Our contribution to this R\&D programme is the development of such scheduling techniques.

	In the remainder of this chapter we will outline the real world scheduling domain that motivates our research,
	raise research questions in order to more precisely describe the purpose of our research and, finally,
	describe the structure of the dissertation.

	For a thorough discussion of the organizational structure of NedTrain/NS and the
	positioning of scheduling research within the associated R\&D programme, 
	the reader may refer to the dissertation of M. Wilson \cite{wilson:2016}, 
	of which this dissertation is essentially a successor.

	%The latter is abstract in that it can be approached in different ways at the technical level.
	%In fact, as explained further down the line,
	%the results gathered in this dissertation are divided conceptually in two parts,
	%corresponding to two different angles for dealing with the abstract problem outlined by the research questions.


	\section{Motivating application}

	Planning and scheduling are remarkably useful, if not indispensable,
	for orchestrating and automating complex processes in the modern world.
	Example applications of scheduling include construction projects, 
	the production of goods, space exploration missions, and more.
	Due to the wide applicability of scheduling in the real world, 
	existing literature comprises a vast landscape of different problem models and associated algorithms,
	each tailored to the specific needs of a corresponding domain.%
	\footnote{Indicatively, \emph{Google Scholar} returns over eight thousand articles and books
	with the word \emph{scheduling} in the title, published within the year 2016 alone.}
	
	In line with existing literature, our research is also inspired by a real world application.
	The scheduling process in a NedTrain depot involves a set of trains,
	each of which is expected to arrive at a certain release date.
	During its stay at the depot, a set of inspection and repair tasks 
	(the composition of which depends on the particular train) must be executed, 
	subject to temporal and resource constraints.
	Temporal constraints restrict the temporal distance at which pairs of tasks may be dispatched.
	For example, consider that typically a paint-job task cannot be dispatched until all other inspections and repairs have finished.
	In addition to temporal constraints, 
	resource constraints are present in our motivating application.
	Consider that a task typically occupies certain resources such as equipment, platforms and personnel (or actors).
	At the same time, only a limited amount of each resource can be available at the depot at any point in time.
	Such resource demands and limitations at the depot give rise to resource constraints,
	which effectively limit the combinations of tasks that may overlap at any point in time.
	Finally, consider that each train is associated with a respective due-date.
	Having a train wait at the depot past its due date induces a certain cost,
	as unavailability for use in the railway network might ultimately translate to time-table delays and customer dissatisfaction.

	%A complete summary of NedTrain's organizational structure and the particular details of
	%the R\&D project within which this research is embedded, are not in the scope of this chapter.
	%For such a comprehensive discussion, the reader may refer to \cite{wilson:2016}, 
	%which is essentially a predecessor of the research work presented here.

\annotate{poio einai to position tou research?}

	Existing literature includes a variety of methods for handling such temporal, resource and due-date constraints.
	Using an existing so-called \emph{fixed-time scheduling} approach would enable us to find a schedule
	that prescribes intended dispatching times, or start times, for the tasks.
	Consider, however, that trains might arrive unexpectedly late at the depot due to traffic and/or breakdowns.
	Moreover, resources might become unexpectedly unavailable and as such,
	tasks might get dispatched later than scheduled, 
	or even take longer than predicted in the schedule.
	As a result, in most real-world applications such a schedule is typically not very useful
	as it might become unexpectedly invalid due to unexpected changes in the environment.

	In effect, then, final dispatching decisions are often unavoidably postponed into the future
	with the schedule having to continuously undergo adaptations in order to remain feasible.
	To quote Smith in \cite{smith:2003}:
	\begin{quote}
		\begin{small}
	If the goal of scheduling is to orchestrate an optimized behavior of some resource-limited system or organization over time, then the value of a
	schedule will be a function of its continuing relevance to the current environmental state.
		\end{small}
	\end{quote}

	Moreover, it should be noted that in addition to unavoidable, it sometimes also \emph{desirable} to postpone dispatching decisions.
	Consider, for example, that in the NedTrain depot, but also in other operational contexts (e.g. \cite{leeuwen:2009}),
	involved actors may not favor committing to strict dispatching times from the beginning.
	Instead they might prefer to have some freedom in determining, when the time comes, the exact moment to dispatch a task,
	in order to optimize certain individual preference criteria.
	In such cases, the mechanism according to which actors decide exact dispatching times constitutes an additional source of uncertainty.

\annotate{OK, ara ti mporoume na kanoume?}
	Scheduling under uncertainty is a research area dedicated to a wide variety of 
	techniques for scheduling in the face of non-deterministic changes in the environment.
	Such techniques range from purely reactive dispatching strategies that bypass the generation of a schedule altogether,
	to proactive techniques for generating baseline schedules that can withstand the effects of uncertainty. 
	For a comprehensive review of existing techniques and their applicability in the industry, 
	the reader may refer to \cite{herroelen2005,beck:2002,smith:2003}.
	%
	Ara o skopos autou tou PhD einai af'enos na vrei poies einai ta anagkaia issues pou prepei na 
	dieuthetithoun se ena operational context opws auto tou nedtrain maintenance depot 
	kai af'etairou na entopisei kai na epekteinei (ean xreiastei) tis katalliles texnikes apo to sxetiko literature.

\section{Research Questions}
	As discussed so far, a schedule defines a set of dispatching times that might have to be modified in response to uncertain events,
	so either by choice and/or unavoidably, final dispatching times are postponed into the future.
	Naturally, one might wonder why not to simply find a new schedule by solving an updated scheduling problem 
	whenever the current schedule gets invalidated due to changes in the environment.
	But as we show in the following, in workshops like the NedTrain maintenance depot,
	such a plain approach may be as inadequate as an alternative extreme,
	namely a purely dynamic approach according to which no schedule is generated at all
	and dispatching decisions are taken on-the-fly by observing the environment and consulting some set of rules.

	The main reason such approaches are inadequate is that they make it impossible to predict,
	at least with a certain degree of certainty, the final dispatching times of the tasks.
	Preparing a schedule is functionally equivalent to making a prediction of how the task execution process is (expected to) unfold.
	If such a prediction is not offered or if the prediction is completely unreliable (i.e. finding a new schedule from scratch),
	then involved actors cannot plan ahead.
	To be able to respond to the unpredictable dispatching demands of such a scheduling process,
	actors and resources should be completely agile, i.e. continuously available in the workshop,
	which usually translates into excessive costs.

	\begin{quote}
	\textbf{Research Question 1.}
	How to ensure that tasks will get dispatched in the vicinity of certain time-points or within certain time-windows,
	so as to avoid relying on the continuous availability of actors and other resources at the workshop?
	\end{quote}

	to deutero provlima pou prokalei ena entelws aprovleptos tropos dispatching,
	einai oti gia na diasfalistei oti to schedule pou tha ginei realized tha einai feasible simfwna me ta domain constraints,
	epivaletai to close cooperation metaksy twn involved actors.
	Prepei diladi oi actors diarkws na paratiroun ta dispatching decisions pou lamvanontai
	outws wste na lavoun antistoixa ta dika tous dispatching decisions.
	Omws opws se diafores periptwseis, etsi kai stin periptwsh ths NedTrain, mia tetoiou eidous synchronous epikoinwnias den einai epithumith.
	Stin periptwsh tis NedTrain, gia paradeigma, oi actors pou diekpairewnoun ta tasks
	xwrizontai se omades, kathe mia apo tis opoies kathodigeitai apo enan antistoixo foreman.
	Autes oi omades tha protimousan na paramenoun aneksartites apo ta decisions and/or the delays of other teams in the workshop.

	\begin{quote}
	\textbf{Research Question 2.}
	How to eliminate or at least limit the need for synchronous communication in order to satisfy domain constraints during dispatching?
	\end{quote}

	telos einai simantiko na shmeiwthei oti to rescheduling twn dispatching times prepei na ginetai me arketa efficient tropo,
	wste o xronos pou dapanatai na min apotelei alli mia pigi kathusterishs.
	epilysh resource constraints
	opws afta pou uparxoun sto depot
	perilamvanei tin epilush enos hard scheduling problem
	gia tin ekseuresh kalhs lyshs mporei na xreiastei na dapanithei arketos xronos.
	ws ek toutou, den mporoume na kanoume afford mia tetoia epilysh resource constraints kathe fora pou 
	ta krinetai aparaitito na parthei ena dispatching decision,
	i kathe fora pou prepei ta mellontika dispatching decisions na ginoun rescheduled.

	\begin{quote}
	\textbf{Research Question 3.}
	How to ensure that rescheduling future dispatching times can efficient in order to keep pace with task execution?
	\end{quote}


\annotate{high-level look at the two parts}
		This thesis summarizes results for two different types of scheduling problems and as such it is divided into respective parts I and II.

		Both types of problems belong to the research area of scheduling under uncertainty, 
		but uncertainty has a different meaning in each of the two cases.
		Despite their differences, parts I and II have an underlying theme in common: 
		beyond finding a fixed schedule for a given scheduling problem,
		we are interested in finding a strategy for adjusting the solution in a continuous scheduling process.

		Part I focuses on problems related to dispatching instantaneous events subject to Simple Temporal Problem (STP) constraints.
		Such constraints restrict the minimum and maximum temporal distance between the dispatching of pairs of events.
		It is assumed that each event is associated with a respective actor that will choose when to dispatch his event from a respective time-window.
		Uncertainty in this case results from not being able to predict how an actor will choose within a given time-window.
		We are interested in finding a \emph{flexible} strategy for initializing these time-windows and updating them as choices are being made,
		striving to maximize the freedom with which actors can make choices as events keep getting dispatched.

		Part II focuses on problems related to dispatching non-instantaneous events that correspond to tasks with random durations,
		subject to simple precedence constraints and resource constraints.
		Uncertainty in this case results from not being able to predict the outcome duration of a task.
		We are interested in finding a dispatching strategy that enables us to predict with some confidence the outcome start-times of the tasks, 
		even though the outcome task durations are unpredictable.
		More in particular, we are interested in finding a strategy that optimizes the trade-off between two conflicting qualities:
		dispatching tasks efficiently and dispatching tasks predictably.
